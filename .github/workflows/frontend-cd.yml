name: continuous-deployment-frontend
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'starter/frontend/**'

env:
  NODE_VERSION: '18.x'
  REACT_APP_MOVIE_API_URL: 'backend.default.svc.cluster.local'

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/frontend

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
          cache-dependency-path: "starter/frontend/package-lock.json"

      - name: Lint
        run: |
          npm ci
          npm run lint

  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/frontend

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
          cache-dependency-path: "starter/frontend/package-lock.json"

      - name: Test
        run: |
          npm ci
          npm run test 

  deploy:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        working-directory: starter/frontend
        run: |
          docker build --build-arg=REACT_APP_MOVIE_API_URL=${{ env.REACT_APP_MOVIE_API_URL }} -t frontend:${GITHUB_SHA} .
          docker tag frontend:${GITHUB_SHA} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/frontend:${GITHUB_SHA}
          docker tag frontend:${GITHUB_SHA} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/frontend:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/frontend:${GITHUB_SHA}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/frontend:latest

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --name cluster --region us-east-1

      - name: Set image tag and apply to cluster
        run: |
          cd starter/frontend/k8s
          kustomize edit set image frontend=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/frontend:${GITHUB_SHA}
          kustomize build | kubectl apply -f -