name: frontend-cd

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  linting:
    runs-on: ubuntu-latest
    environment: aws-access

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: Install dependencies
      working-directory: starter/frontend
      run: npm ci

    - name: Run linting
      working-directory: starter/frontend
      run: npm run lint

  test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json
        
    - name: Install dependencies
      working-directory: starter/frontend
      run: npm ci
  
    - name: Run tests
      working-directory: starter/frontend
      run: npm run test

  build:
    needs: [linting, test]
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out the repository
      uses: actions/checkout@v3
    
    - name: Set up Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1
    
    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push Docker image
      env:
        IMAGE_TAG: latest
      run: |
       docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag 669172573612.dkr.ecr.us-east-1.amazonaws.com/frontend:$IMAGE_TAG .
       docker push 669172573612.dkr.ecr.us-east-1.amazonaws.com/frontend:$IMAGE_TAG

   # - name: Deploy Docker Image to Amazon EKS using kubectl
    #  working-directory: starter/frontend/k8s
     # run: |
        #kustomize edit set image frontend=${{ secrets.ECR_REGISTRY }}:latest
        #kustomize build | kubectl apply -f -
