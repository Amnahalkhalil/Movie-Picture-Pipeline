name: Backend Deployment (CD)

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  PYTHON_VERSION: "3.10"
  SRC_DIR: "${{ github.workspace }}/src/backend/"
  K8_DIR: "${{ github.workspace }}/src/backend/k8s"
  ECR_REPO: "646184429643.dkr.ecr.us-east-1.amazonaws.com/backend"
  AWS_REGION: "us-east-1"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python ${{env.PYTHON_VERSION}}
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VERSION}}
          cache: "pipenv"

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies and lint
        run: |
          cd ${{env.SRC_DIR}}
          pipenv install --dev
          pipenv run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python ${{env.PYTHON_VERSION}}
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VERSION}}
          cache: "pipenv"

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies and lint
        run: |
          cd ${{env.SRC_DIR}}
          pipenv install --dev
          pipenv run lint
  build-deploy:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      # Build and push
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: backend
          IMAGE_TAG: ${{ github.sha }}

        run: |
          cd ${{env.SRC_DIR}}
          docker build --tag=$REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Setup kubectl + Kustomize
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"
      # Deploy K8 manifests
      - name: Deploy to Kubernetes
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: backend
          IMAGE_TAG: ${{ github.sha }}
          KUBE_CONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          cd ${{env.K8_DIR}}
          aws eks update-kubeconfig --name=cluster
          echo "backend=$REGISTRY/$REPOSITORY:$IMAGE_TAG"

          kustomize edit set image backend=$REGISTRY/$REPOSITORY:$IMAGE_TAG
          kustomize build | kubectl apply -f -